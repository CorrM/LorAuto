name: Make Release
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    tags:
    - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x.x'

      - name: Build
        run: dotnet build -c Release

      - name: dotnet publish
        run: |
          dotnet publish "src/LorAuto.Cli" -c Release -r win-x64 -p:PublishSingleFile=true --no-self-contained --nologo -o ${{env.DOTNET_ROOT}}/LorAuto

      - name: Copy plugins # It's not the best way to do it, but it'll work for now.
        run: |
          mkdir -p ${{env.DOTNET_ROOT}}/LorAuto/Plugins/Strategy
          cp -R ./src/LorAuto.Strategy.Generic/bin/Release/net7.0-windows/Generic.dll ${{env.DOTNET_ROOT}}/LorAuto/Plugins/Strategy/

      - name: Zip release
        run: |
          cd ${{env.DOTNET_ROOT}}/LorAuto/
          zip -r ${{env.DOTNET_ROOT}}/LorAuto/release.zip ./*

  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: LorAuto
          path: ${{env.DOTNET_ROOT}}/LorAuto/release.zip

      - name: Upload Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{env.DOTNET_ROOT}}/LorAuto/release.zip
          makeLatest: true
          generateReleaseNotes: true
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

